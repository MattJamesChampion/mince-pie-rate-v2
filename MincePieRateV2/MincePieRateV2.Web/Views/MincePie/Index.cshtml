@model IEnumerable<MincePieRateV2.ViewModels.Domain.MincePieDetailsViewModel>
@using MincePieRateV2.Web.Authorization.Constants

@{
    ViewData["Title"] = "Mince Pies";
}

<h1>Index</h1>

<p>
    <a asp-action="Add">Add Mince Pie</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Brand)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Name)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Brand)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @if (ViewContext.HttpContext.User.IsInRole(RoleConstants.AdministratorRoleName))
                {
                    <a asp-action="Edit" asp-route-id="@item.Id">Edit</a>
                    <text> | </text>
                }
                <a asp-action="Details" asp-route-id="@item.Id">Details</a>
                @if (ViewContext.HttpContext.User.IsInRole(RoleConstants.AdministratorRoleName))
                {
                    <text> | </text>
                    <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                }
            </td>
        </tr>
}
    </tbody>
</table>
